openapi: 3.0.2

info:
  title: Eclipse Kapua REST API - Users
  version: '1.0'
  contact:
    name: Eclipse Kapua Dev Team
    url: https://eclipse.org/kapua
    email: kapua-dev@eclipse.org
  license:
    name: Eclipse Public License 2.0
    url: https://www.eclipse.org/legal/epl-2.0

paths:
  /{scopeId}/users:
    get:
      tags:
        - User
      summary: Get all the Users
      operationId: userList
      parameters:
        - $ref: '../openapi.yaml#/components/parameters/scopeId'
        - name: name
          in: query
          description: The user name to filter results
          schema:
            type: string
        - name: matchTerm
          in: query
          description: |
            A term to match on different fields. Every entity whose at least one of the specified fields starts with this value will be matched.
            Matches on the following fields:

            - NAME
            - EMAIL
            - PHONE_NUMBER
            - DISPLAY_NAME
            - EXTERNAL_ID
            - DESCRIPTION
          schema:
            type: string
        - $ref: '../openapi.yaml#/components/parameters/sortParam'
        - $ref: '../openapi.yaml#/components/parameters/sortDir'
        - $ref: '../openapi.yaml#/components/parameters/askTotalCount'
        - $ref: '../openapi.yaml#/components/parameters/limit'
        - $ref: '../openapi.yaml#/components/parameters/offset'
      responses:
        200:
          description: The list of the Users available in the Scope
          content:
            application/json:
              schema:
                $ref: './user.yaml#/components/schemas/userListResult'
        401:
          $ref: '../openapi.yaml#/components/responses/unauthenticated'
        403:
          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'
        500:
          $ref: '../openapi.yaml#/components/responses/kapuaError'
    post:
      tags:
        - User
      summary: Create a new User
      operationId: userCreate
      parameters:
        - $ref: '../openapi.yaml#/components/parameters/scopeId'
      requestBody:
        description: An object containing the properties for the new User to be created
        content:
          application/json:
            schema:
              $ref: './user.yaml#/components/schemas/userCreator'
            examples:
              minimal:
                description: Create an User providing only the required information (name)
                value:
                  name: new-user
              complete:
                description: Create an User providing all the information
                value:
                  $ref: './user.yaml#/components/schemas/userCreator'
        required: true
      responses:
        201:
          description: The User that has just been created
          content:
            application/json:
              schema:
                $ref: './user.yaml#/components/schemas/user'
              examples:
                minimal:
                  description: An User created with only the required information (username)
                  value:
                      type: user
                      id: TvnAZL6Zzu0
                      scopeId: AQ
                      createdOn: '2019-09-11T09:07:09.853Z'
                      createdBy: AQ
                      modifiedOn: '2019-09-11T09:07:09.853Z'
                      modifiedBy: AQ
                      optlock: 1
                      name: new-user
                      status: ENABLED
                      userType: INTERNAL
                complete:
                  description: An User created providing all the information
                  value:
                    $ref: './user.yaml#/components/examples/user/value'
        401:
          $ref: '../openapi.yaml#/components/responses/unauthenticated'
        403:
          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'
        404:
          $ref: '../openapi.yaml#/components/responses/entityNotFound'
        500:
          $ref: '../openapi.yaml#/components/responses/kapuaError'
