apiVersion: v1
id: eclipse-kapua
kind: Template
name: eclipse-kapua
metadata:
  name: eclipse-kapua
parameters:
  - name:           DOCKER_ACCOUNT
    description:      The docker hub account name to pull from
    value:            eclipse
  - name:           ELASTIC_SEARCH_MEMORY
    descrption:       The minimum and maximun Java heap space for Elasticsearch
    value:            '512m'
  - name:           IMAGE_VERSION
    description:      The version of the image to use
    value:            latest
  - name:           JAVA_OPTS_EXTRA
    description:      Extra Java options
    value:            ''
  - name:           JOLOKIA_PASSWORD
    description:      The password used for the Jolokia endpoint authentication
    generate:         expression
    from:             '[a-zA-Z0-9]{15}'
    required:         true
  - name:           JOLOKIA_USER
    description:      The username used for the Jolokia endpoint authentication
    value:            jolokia

objects:


  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      generation: 1
      labels:
        app: kapua-broker
      name: kapua-broker
    spec:
      replicas: 1
      selector:
        app: kapua-broker
        deploymentconfig: kapua-broker
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            openshift.io/container.kapua-broker.image.entrypoint: '["/opt/activemq/bin/activemq","console"]'
          labels:
            app: kapua-broker
            deploymentconfig: kapua-broker
            hawkular-openshift-agent: jolokia-broker
        spec:
          containers:
            - env:
                - name: ACTIVEMQ_OPTS
                  value:
                    -Dcommons.db.connection.host=$SQL_SERVICE_HOST
                    -Dcommons.db.connection.port=$SQL_PORT_3306_TCP_PORT
                    -Dcommons.db.schema.update=true
                    -Dcommons.eventbus.url="failover:(amqp://${EVENTS_BROKER_PORT_5672_TCP_ADDR}:${EVENTS_BROKER_PORT_5672_TCP_PORT})"
                    -Dcertificate.jwt.private.key=file:///var/opt/activemq/key.pk8
                    -Dcertificate.jwt.certificate=file:///var/opt/activemq/cert.pem
                    -Dbroker.ip=kapua-broker.eclipse-kapua.svc
                    -Ddatastore.elasticsearch.nodes=$ELASTICSEARCH_PORT_9200_TCP_ADDR
                    -Dmetrics.enable.jmx=true
                    -javaagent:/opt/jolokia/jolokia-jvm-agent.jar=port=8778,protocol=https,caCert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt,clientPrincipal=cn=system:master-proxy,useSslClientAuthentication=true,extraClientCheck=true,host=0.0.0.0,discoveryEnabled=false,user=${JOLOKIA_USER},password=${JOLOKIA_PASSWORD}
                    ${JAVA_OPTS_EXTRA}
              image: ${DOCKER_ACCOUNT}/kapua-broker:${IMAGE_VERSION}
              imagePullPolicy: IfNotPresent
              name: kapua-broker
              ports:
                - containerPort: 8778
                  name: jolokia
                - containerPort: 1883
                - containerPort: 61614
                - containerPort: 5672
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 15
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 1883
                timeoutSeconds: 1
              volumeMounts:
                - mountPath: /opt/activemq/data
                  name: kapua-broker-volume-1
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          volumes:
            - name: kapua-broker-volume-1
              emptyDir: {}
            - name: hawkular-openshift-agent
              configMap:
                name: hawkular-openshift-agent-broker


  - apiVersion: v1
    kind: Service
    metadata:
      name: kapua-broker
      labels:
        app: kapua-broker
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "sql", "kind": "Service"}, {"name": "elasticsearch", "kind": "Service"}, {"name": "events-broker", "kind": "Service"}]'
    spec:
      ports:
        - name: mqtt-tcp
          protocol: TCP
          port: 1883
          targetPort: 1883
        - name: mqtt-websocket-tcp
          protocol: TCP
          port: 61614
          targetPort: 61614
      selector:
        app: kapua-broker
        deploymentconfig: kapua-broker


  - apiVersion: v1
    kind: Route
    metadata:
      name: broker
      labels:
        app: kapua-broker
    spec:
      to:
        kind: Service
        name: kapua-broker
      port:
        targetPort: mqtt-websocket-tcp

  - apiVersion: v1
    kind: Service
    metadata:
      name: mqtt-ingress
      labels:
        app: kapua-broker
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "kapua-broker", "kind": "Service"}]'
    spec:
      ports:
        - name: mqtt-tcp
          port: 1883
          nodePort: 31883
      type: NodePort
      selector:
        app: kapua-broker
        deploymentconfig: kapua-broker
